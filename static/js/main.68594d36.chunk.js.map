{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemIndex","handleSwipeClick","step","props","images","frameSize","infinity","nextInd","totalImages","length","lastInd","setState","this","itemWidth","animationDuration","prevDisabled","nextDisabled","className","style","width","transition","map","img","ind","transform","src","alt","type","disabled","onClick","Component","App","setWidth","event","target","value","setFrameSize","setStep","setAnimationDuration","setInfinity","checked","htmlFor","id","min","max","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAQ,CACNC,UAAW,GAFf,EAKEC,iBAAmB,SAACC,GAAD,OAAkB,WACnC,MAAwC,EAAKC,MAArCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,SAGvBC,EAFkB,EAAKR,MAAnBC,UAEkBE,EAE1B,GAAII,EAAU,CACZ,IAAME,EAAcJ,EAAOK,OAEvBP,EAAO,GAAKK,GAAWC,EACzBD,GAAWC,EACFN,EAAO,GAAKK,EAAU,IAC/BA,GAAYA,EAAUC,EAAeA,GAAeA,OAEjD,CACL,IACME,EAAUN,EAAOK,OAASJ,EAE5BH,EAAO,GAAKK,EAAUG,IACxBH,EAAUG,GAGRR,EAAO,GAAKK,EAPC,IAQfA,EARe,GAYnB,EAAKI,UAAS,iBAAO,CACnBX,UAAWO,QAjCjB,4CAqCE,WACE,MAOIK,KAAKT,MANPC,EADF,EACEA,OACAF,EAFF,EAEEA,KACAW,EAHF,EAGEA,UACAR,EAJF,EAIEA,UACAS,EALF,EAKEA,kBACAR,EANF,EAMEA,SAGMN,EAAcY,KAAKb,MAAnBC,UACFe,EAAgBf,GAAa,IAAOM,EACpCU,EAAgBhB,GAAaI,EAAOK,OAASJ,IAAeC,EAElE,OACE,sBACEW,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKd,EAAYQ,EAAjB,MACLO,WAAW,GAAD,OAAKN,EAAL,OAJd,UAOE,oBAAIG,UAAU,iBAAd,SACGb,EAAOiB,KAAI,SAACC,EAAKC,GAAN,OACV,oBAEEN,UAAU,gBACVC,MAAO,CACLM,UAAU,cAAD,QAAiBxB,EAAYa,EAA7B,OACTO,WAAW,GAAD,OAAKN,EAAL,OALd,SAQE,qBAAKW,IAAKH,EAAKI,IAAG,UAAKH,EAAM,GAAKJ,MAAON,KAPpCS,QAYX,sBAAKL,UAAU,mBAAf,UACE,wBACEU,KAAK,SACLV,UAAU,gBACVW,SAAUb,EACVc,QAASjB,KAAKX,kBAAkBC,GAJlC,oBAQA,wBACEyB,KAAK,SACL,UAAQ,OACRV,UAAU,gBACVW,SAAUZ,EACVa,QAASjB,KAAKX,iBAAiBC,GALjC,8BAnFV,GAA8B4B,aCHxBC,E,4MACJhC,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFS,UAAW,IACXR,UAAW,EACXH,KAAM,EACNY,kBAAmB,IACnBR,UAAU,G,EAGZ0B,SAAW,SAACC,GACV,EAAKtB,SAAS,CAAEE,WAAYoB,EAAMC,OAAOC,S,EAG3CC,aAAe,SAACH,GACd,EAAKtB,SAAS,CAAEN,WAAY4B,EAAMC,OAAOC,S,EAG3CE,QAAU,SAACJ,GACT,EAAKtB,SAAS,CAAET,MAAO+B,EAAMC,OAAOC,S,EAGtCG,qBAAuB,SAACL,GACtB,EAAKtB,SAAS,CAAEG,mBAAoBmB,EAAMC,OAAOC,S,EAGnDI,YAAc,SAACN,GACb,EAAKtB,SAAS,CAAEL,SAAU2B,EAAMC,OAAOM,W,4CAGzC,WACE,MAOI5B,KAAKb,MANPK,EADF,EACEA,OACAS,EAFF,EAEEA,UACAR,EAHF,EAGEA,UACAH,EAJF,EAIEA,KACAY,EALF,EAKEA,kBACAR,EANF,EAMEA,SAGF,OACE,sBAAKW,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,sBAIA,wBACEwB,QAAQ,SACRxB,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLe,GAAG,SACHP,MAAOtB,EACP8B,IAAK,IACLC,IAAK,IACL1C,KAAM,GACN2C,SAAUjC,KAAKoB,cAGnB,wBACES,QAAQ,UACRxB,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLe,GAAG,UACHP,MAAO9B,EACPsC,IAAK,EACLC,IAAKxC,EAAOK,OACZP,KAAM,EACN2C,SAAUjC,KAAKwB,kBAGnB,wBACEK,QAAQ,SACRxB,UAAU,QAFZ,kBAKE,uBACEU,KAAK,SACLe,GAAG,SACHP,MAAOjC,EACPyC,IAAK,EACLC,IAAKxC,EAAOK,OACZP,KAAM,EACN2C,SAAUjC,KAAKyB,aAGnB,wBACEI,QAAQ,cACRxB,UAAU,QAFZ,+BAKE,uBACEU,KAAK,SACLe,GAAG,cACHP,MAAOrB,EACP6B,IAAK,IACLC,IAAK,IACL1C,KAAM,IACN2C,SAAUjC,KAAK0B,0BAGnB,wBACEG,QAAQ,aACRxB,UAAU,QAFZ,sBAKE,uBACEU,KAAK,WACLe,GAAG,aACHG,SAAUjC,KAAK2B,iBAInB,cAAC,EAAD,CACEnC,OAAQA,EACRS,UAAWA,EACXR,UAAWA,EACXH,KAAMA,EACNY,kBAAmBA,EACnBR,SAAUA,W,GAvIFwC,IAAMhB,WA6ITC,ICvJfgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.68594d36.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n};\n\ntype State = {\n  itemIndex: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    itemIndex: 0,\n  };\n\n  handleSwipeClick = (step: number) => () => {\n    const { images, frameSize, infinity } = this.props;\n    const { itemIndex } = this.state;\n\n    let nextInd = itemIndex + step;\n\n    if (infinity) {\n      const totalImages = images.length;\n\n      if (step > 0 && nextInd >= totalImages) {\n        nextInd %= totalImages;\n      } else if (step < 0 && nextInd < 0) {\n        nextInd = ((nextInd % totalImages) + totalImages) % totalImages;\n      }\n    } else {\n      const firstInd = 0;\n      const lastInd = images.length - frameSize;\n\n      if (step > 0 && nextInd > lastInd) {\n        nextInd = lastInd;\n      }\n\n      if (step < 0 && nextInd < firstInd) {\n        nextInd = firstInd;\n      }\n    }\n\n    this.setState(() => ({\n      itemIndex: nextInd,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { itemIndex } = this.state;\n    const prevDisabled = (itemIndex <= 0) && !infinity;\n    const nextDisabled = (itemIndex >= images.length - frameSize) && !infinity;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, ind) => (\n            <li\n              key={img}\n              className=\"Carusel__item\"\n              style={{\n                transform: `translateX(${-itemIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img src={img} alt={`${ind + 1}`} width={itemWidth} />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__button\">\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            disabled={prevDisabled}\n            onClick={this.handleSwipeClick(-step)}\n          >\n            &#8678;\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__btn\"\n            disabled={nextDisabled}\n            onClick={this.handleSwipeClick(step)}\n          >\n            &#8680;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  setWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinity: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          Carousel\n        </h1>\n\n        <label\n          htmlFor=\"itemId\"\n          className=\"label\"\n        >\n          Item Width:\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setWidth}\n          />\n        </label>\n        <label\n          htmlFor=\"frameId\"\n          className=\"label\"\n        >\n          Frame Size:\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </label>\n        <label\n          htmlFor=\"stepId\"\n          className=\"label\"\n        >\n          Step:\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </label>\n        <label\n          htmlFor=\"animationId\"\n          className=\"label\"\n        >\n          AnimationDuration:\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimationDuration}\n          />\n        </label>\n        <label\n          htmlFor=\"infinityId\"\n          className=\"label\"\n        >\n          Infinite:\n          <input\n            type=\"checkbox\"\n            id=\"infinityId\"\n            onChange={this.setInfinity}\n          />\n        </label>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}